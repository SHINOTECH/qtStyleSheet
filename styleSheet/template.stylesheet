/* The tooltip bg and text color when hovering the mouse over a widget with tooltips */
QToolTip
{
    background-color: ${TOOLTIP_BACKGROUND_COLOR};
    border: 1px solid ${BORDER_HOVER_COLOR};
    padding: 0px;
    border-radius: 0px;
}

/* The bg and text of most of the widgets */
QWidget
{
    color: ${MAIN_TEXT_COLOR};
    font-size: ${MAIN_TEXT_SIZE}px;
    font-family: "${MAIN_TEXT_FONT}";
    background-color: ${WIDGET_BACKGROUND_COLOR};
    /*border: 1px solid ${WIDGET_BORDER_COLOR};*/
    padding: 0px;
    margin: 0px;

}

/* Control the widget in focus, right now only the border */
QWidget:focus
{
    border: 1px solid ${BORDER_COLOR};
}


/* A disabled widget, List views answer to that css */
QWidget:disabled
{
    color: ${MAIN_DISABLED_TEXT_COLOR};
    background-color: ${WIDGET_DISABLED_BACKGROUND_COLOR};
}

/* When overing the mouse on an item of a list view, table view, tree view */
QWidget:item:hover
{
    background-color: QLinearGradient( x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${ITEM_HOVER_BACKGROUND_COLOR},
        stop: 1 ${_LIGHT_GREY_}${ITEM_HOVER_BACKGROUND_COLOR}
    );
    color: ${ITEM_HOVER_TEXT_COLOR};
}

/* When selecting an item of a list view, table view, tree view and menus*/
QWidget:item:selected
{
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${ITEM_SELECTED_BACKGROUND_COLOR},
        stop: 0.6 ${ITEM_SELECTED_BACKGROUND_COLOR},
        stop: 1 ${_DARK_1_}${ITEM_SELECTED_BACKGROUND_COLOR}
    );
    color: ${ITEM_SELECTED_TEXT_COLOR};
}


/* the background of the menu item. if not transparent they show like small squares */
QMenuBar::item
{
    background: transparent;
}

/* when hovering the mouse over a menu bar item before clicking */
QMenuBar::item:selected
{
    background: ${MENU_HOVER_BACKGROUND_COLOR};
    border: 1px solid ${BORDER_HOVER_COLOR};

}

/* not sure what it does */
QMenuBar::item:pressed
{
    background-color: ${MENU_HOVER_BACKGROUND_COLOR};
    border: 1px solid ${BORDER_COLOR};
    margin-bottom:-1px;
    padding-bottom:1px;
}

/* The menu that pop up when clicking on a menu item
also controls the border color of the list view
but somehow not the background color */
QMenu
{
    border: 1px solid ${BORDER_COLOR};
    font-size: ${MENU_TEXT_SIZE}px;
    font-family: "${MENU_TEXT_FONT}";
}

/* menu separator item */
QMenu::separator
{
    height: 2px;
    background-color: ${MENU_SEPARATOR_COLOR};
    color: ${MENU_SEPARATOR_COLOR};
    margin-left: 2px;
    margin-right: 2px;
}

/* Control the background color of the items in menus and list view */
QMenu::item
{
    color: ${MAIN_TEXT_COLOR};
    background-color: ${ITEM_BACKGROUND_COLOR};
    padding: 2px 20px 2px 20px;
}

/* not sure what it does */
QMenu::item:selected
{
    color: #000000;
}

/* Control the color of the portion of the menus and list that don't have items */
QWidget:disabled
{
    color: ${ITEM_DISABLED_TEXT_COLOR};
    background-color: ${ITEM_BACKGROUND_COLOR};
}

/* Control the line edits */
QLineEdit
{
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${FIELD_BACKGROUND_COLOR},
        stop: 0.3 ${FIELD_BACKGROUND_COLOR},
        stop: 1 ${_DARK_1_}${FIELD_BACKGROUND_COLOR}
    );
    color: ${FIELD_TEXT_COLOR};
    padding: 1px;
    border-style: solid;
    border: 1px solid ${BORDER_COLOR};
    border-radius: 5;
}

/* for password mode lineEdit */
QLineEdit[echoMode="2"] {
    lineedit-password-character: 9679;
}

/* When editing a lineEdit */
QLineEdit:focus
{
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${FIELD_SELECTED_BACKGROUND_COLOR},
        stop: 0.3 ${FIELD_SELECTED_BACKGROUND_COLOR},
        stop: 1 ${_DARK_1_}${FIELD_SELECTED_BACKGROUND_COLOR}
    );
    color: ${FIELD_TEXT_COLOR};
    selection-background-color: ${FIELD_SELECTED_TEXT_BACKGROUND_COLOR};
    selection-color: ${FIELD_SELECTED_TEXT_COLOR};
}

/* Read-only line edit BG and text color */
QLineEdit:read-only
{
    background-color: ${FIELD_DISABLED_BACKGROUND_COLOR};
    color: ${FIELD_DISABLED_TEXT_COLOR};
    selection-background-color: ${FIELD_SELECTED_TEXT_BACKGROUND_COLOR};
    selection-color: ${FIELD_SELECTED_TEXT_COLOR};
}

/* Control the look of regular buttons */
QPushButton
{
    color: ${BUTTON_TEXT_COLOR};
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${BUTTON_COLOR},
        stop: 0.6 ${BUTTON_COLOR},
        stop: 1 ${_DARK_1_}${BUTTON_COLOR}
    );
    border-width: 1px;
    border-color: ${BUTTON_BORDER_COLOR};
    border-style: solid;
    border-radius: 5px;
    padding: 3px;
    font-size: ${BUTTON_TEXT_SIZE}px;
    font-family: "${BUTTON_TEXT_FONT}";
    padding-left: 10px;
    padding-right: 10px;
}

/* Control the look of regular buttons */
QPushButton:flat
{
    background-color: ${BUTTON_COLOR};
    border: none; /* no border for a flat push button */
}

/* make the default button prominent */
QPushButton:default
{
    color: ${BUTTON_TEXT_COLOR};
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${BUTTON_COLOR},
        stop: 0.6 ${BUTTON_COLOR},
        stop: 1 ${_DARK_1_}${BUTTON_COLOR}
    );
    border-width: 1px;
    border-color: ${BUTTON_BORDER_COLOR};
    border-style: solid;
    border-radius: 5px;
    padding: 3px;
    font-size: ${BUTTON_TEXT_SIZE}px;
    font-family: "${BUTTON_TEXT_FONT}";
    padding-left: 10px;
    padding-right: 10px;
}

QPushButton:default:hover
{
    /*background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${BUTTON_HOVER_COLOR},
        stop: 0.8 ${BUTTON_HOVER_COLOR},
        stop: 1 ${_LIGHT_GREY_}${BUTTON_HOVER_COLOR}
    );*/
    border: 2px solid ${HIGHLIGHT_COLOR};
    padding-left: 0px;
    padding-right: 0px;
}

/* Default button pressed */
QPushButton:default:pressed
{
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${_DARK_1_}${BUTTON_COLOR},
        stop: 0 ${_DARK_1_}${BUTTON_COLOR}
    );
}

/* when pressing a button */
QPushButton:pressed
{
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${_DARK_1_}${BUTTON_COLOR},
        stop: 0 ${_DARK_1_}${BUTTON_COLOR}
    );
}

/* The combo box when not selected */
QComboBox
{
    selection-background-color: #ffaa00;
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${BUTTON_COLOR},
        stop: 0.6 ${BUTTON_COLOR},
        stop: 1 ${_DARK_1_}${BUTTON_COLOR}
    );
    border-width: 1px;
    border-color: ${BUTTON_BORDER_COLOR};
    border-style: solid;
    border-radius: 5px;
    padding: 1px;
    font-size: ${MENU_TEXT_SIZE}px;
    font-family: "${MAIN_TEXT_FONT}";
    padding-left: 3px;
    padding-right: 3px;
}

/* When hovering a button or combo box */
QComboBox:hover,QPushButton:hover
{
    /*background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${BUTTON_HOVER_COLOR},
        stop: 0.1 ${BUTTON_HOVER_COLOR},
        stop: 0.8 ${BUTTON_HOVER_COLOR},
        stop: 1 ${_LIGHT_GREY_}${BUTTON_HOVER_COLOR}
    );*/
    border: 2px solid ${HIGHLIGHT_COLOR};
    padding-left: 2px;
    padding-right: 2px;
}

/* for seletable items in combos */
QComboBox:on
{
    padding-top: 3px;
    padding-left: 4px;
    background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${ITEM_SELECTED_BACKGROUND_COLOR},
        stop: 0.6 ${ITEM_SELECTED_BACKGROUND_COLOR},
        stop: 1 ${_DARK_1_}${ITEM_SELECTED_BACKGROUND_COLOR}
    );
    selection-background-color: ${ITEM_SELECTED_BACKGROUND_COLOR};
}

/* Control the look of the menu items in the combo box */
/* Control the color of the Model views (list, tree and table) */
QComboBox, QAbstractItemView
{
    background-color: ${ITEM_BACKGROUND_COLOR};
    border: 1px solid ${BORDER_COLOR};
    selection-background-color: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0 ${ITEM_SELECTED_BACKGROUND_COLOR},
        stop: 0.6 ${ITEM_SELECTED_BACKGROUND_COLOR},
        stop: 1 ${_DARK_1_}${ITEM_SELECTED_BACKGROUND_COLOR}
    );
    color: ${MAIN_TEXT_COLOR};

}

/* This controls the arrow part of the drop down */
QComboBox::drop-down
{
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;

    border-left-width: 0px;
    border-left-color: ${BORDER_COLOR};
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 1px; /* same radius as the QComboBox */
    border-bottom-right-radius: 2px;
 }

/* The arrow icon of the combo box */
QComboBox::down-arrow
{
    image: url(:/arrow_down.png);
    width: 14px;
}

/* groupbox look and margin */
QGroupBox
{
    border: 1px solid ${WIDGET_BORDER_COLOR};
    border-radius: 1px;
    padding: 6px 0px 0px 0px;
    margin: 0px;
}

/* groupbox focus */
QGroupBox:focus
{
    border: 2px solid ${BORDER_COLOR}
}

/* The border color of the text edit boxes */
QTextEdit:focus
{
    border: 2px solid ${HIGHLIGHT_COLOR};
}


QScrollBar:horizontal {
    border: 1px solid ${BORDER_COLOR};
    background: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0.0 ${SCROLLBAR_BACKGROUND_COLOR},
        stop: 0.7 ${SCROLLBAR_BACKGROUND_COLOR},
        stop: 1 ${_DARK_1_}${SCROLLBAR_BACKGROUND_COLOR}
    );
    height: 7px;
    margin: 0px 0px 0px 0px;
    border-radius: 3px;
}

QScrollBar::handle:horizontal
{
    background: QLinearGradient(
        x1: 0, y1: 0,
        x2: 1, y2: 0,
        stop: 0 ${SCROLLBAR_COLOR},
        stop: 1 ${SCROLLBAR_COLOR}
    );
    min-height: 20px;
    border-radius: 2px;
}

QScrollBar::add-line:horizontal {
    border: none;
    border-radius: 0px;
    width: 0px;
    background: transparent;
    subcontrol-position: right;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:horizontal {
    border: none;;
    border-radius: 0px;
    background: transparent;
    width: 0px;
    subcontrol-position: left;
    subcontrol-origin: margin;
}

QScrollBar::right-arrow:horizontal, QScrollBar::left-arrow:horizontal
{
      border: 0px solid black;
      width: 0px;
      height: 0px;
      background: white;
}

QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal
{
      background: none;
}


QScrollBar:vertical {
    border: 1px solid ${BORDER_COLOR};
    background: QLinearGradient(
        x1: 0, y1: 0,
        x2: 0, y2: 1,
        stop: 0.0 ${SCROLLBAR_BACKGROUND_COLOR},
        stop: 0.7 ${SCROLLBAR_BACKGROUND_COLOR},
        stop: 1 ${_DARK_1_}${SCROLLBAR_BACKGROUND_COLOR}
    );
    width: 7px;
    margin: 0px 0px 0px 0px;
    border-radius: 3px;
}

QScrollBar::handle:vertical
{
    background: QLinearGradient(
        x1: 0, y1: 0,
        x2: 1, y2: 0,
        stop: 0 ${SCROLLBAR_COLOR},
        stop: 1 ${SCROLLBAR_COLOR}
    );
    min-width: 20px;
    border-radius: 2px;
}

QScrollBar::add-line:vertical {
    border: none;
    border-radius: 0px;
    width: 0px;
    background: transparent;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical {
    border: none;;
    border-radius: 0px;
    background: transparent;
    width: 0px;
    subcontrol-position: top;
    subcontrol-origin: margin;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical
{
      border: 0px solid black;
      width: 0px;
      height: 0px;
      background: white;
}

QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical
{
      background: none;
}


/* The text edit box (the font size doesn't work) */
QTextEdit, QListView
{
    background-color: ${TEXT_EDIT_BACKGROUND_COLOR};
    background-attachment: scroll;
    color: ${TEXT_EDIT_TEXT_COLOR};
    font-size: ${TEXT_EDIT_TEXT_SIZE}px;
    font-family: "${TEXT_EDIT_TEXT_FONT}";
}

/* when editing a text edit box */
QTextEdit:focus
{
    color: ${FIELD_TEXT_COLOR};
    selection-background-color: ${_RED_};
    selection-color: ${FIELD_SELECTED_TEXT_COLOR};
}

QTextEdit:read-only
{
    background-color: ${FIELD_DISABLED_BACKGROUND_COLOR};
    color: ${FIELD_DISABLED_TEXT_COLOR};
    selection-background-color: ${FIELD_SELECTED_TEXT_BACKGROUND_COLOR};
    selection-color: ${FIELD_SELECTED_TEXT_COLOR};
}


QPlainTextEdit
{
    background-color: ${TEXT_EDIT_BACKGROUND_COLOR};
    color: ${TEXT_EDIT_TEXT_COLOR};
    font-size: ${TEXT_EDIT_TEXT_SIZE}px;
    font-family: "${TEXT_EDIT_TEXT_FONT}";
}

/* when editing a text edit box */
QPlainTextEdit:focus
{
    color: ${FIELD_TEXT_COLOR};
    selection-background-color: ${_RED_};
    selection-color: ${FIELD_SELECTED_TEXT_COLOR};
}

QPlainTextEdit:read-only
{
    background-color: ${FIELD_DISABLED_BACKGROUND_COLOR};
    color: ${FIELD_DISABLED_TEXT_COLOR};
    selection-background-color: ${FIELD_SELECTED_TEXT_BACKGROUND_COLOR};
    selection-color: ${FIELD_SELECTED_TEXT_COLOR};
}

/* TODO verify this */
QHeaderView::section
{
    background-color: QLinearGradient(
        x1:0, y1:0,
        x2:0, y2:1,
        stop:0 #616161,
        stop: 0.5 #505050,
        stop: 0.6 #434343,
        stop:1 #656565
    );
    color: white;
    padding-left: 4px;
    border: 1px solid #6c6c6c;
}

/* TODO test this */
QDockWidget::title
{
    text-align: center;
    spacing: 3px; /* spacing between items in the tool bar */
    background-color: QLinearGradient(
        x1:0, y1:0,
        x2:0, y2:1,
        stop:0 #323232,
        stop: 0.5 #242424,
        stop:1 #323232
    );
}

/* TODO test this */
QDockWidget::close-button, QDockWidget::float-button
{
    text-align: center;
    spacing: 1px; /* spacing between items in the tool bar */
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #323232, stop: 0.5 #242424, stop:1 #323232);
}

/* TODO test this */
QDockWidget::close-button:hover, QDockWidget::float-button:hover
{
    background: #242424;
}

/* TODO test this */
QDockWidget::close-button:pressed, QDockWidget::float-button:pressed
{
    padding: 1px -1px -1px 1px;
}

/* TODO test this */
QMainWindow::separator
{
    background-color: QLinearGradient(
        x1:0, y1:0,
        x2:0, y2:1,
        stop:0 #161616,
        stop: 0.5 #151515,
        stop: 0.6 #212121,
        stop:1 #343434
    );
    color: white;
    padding-left: 4px;
    border: 1px solid #4c4c4c;
    spacing: 3px; /* spacing between items in the tool bar */
}

/* TODO test this */
QMainWindow::separator:hover
{

    background-color: QLinearGradient(
        x1:0, y1:0,
        x2:0, y2:1,
        stop:0 #d7801a,
        stop:0.5 #b56c17
        stop:1 #ffa02f
    );
    color: white;
    padding-left: 4px;
    border: 1px solid #6c6c6c;
    spacing: 3px; /* spacing between items in the tool bar */
}

/* TODO test this */
QToolBar::handle
{
     spacing: 3px; /* spacing between items in the tool bar */
     background: url(:/handle.png);
}

/* TODO test this */
QProgressBar
{
    border: 2px solid grey;
    border-radius: 5px;
    text-align: center;
}

/* TODO test this */
QProgressBar::chunk
{
    background-color: #d7801a;
    width: 2.15px;
    margin: 0.5px;
}

/* Remove the border of the tab layout */
QTabBar
{
    border: none;
}

/* Control the look of the tabs */
QTabBar::tab {
    color: ${MAIN_TEXT_COLOR};
    border: 1px solid ${BORDER_COLOR};
    border-bottom-style: none;
    background-color: ${WIDGET_BACKGROUND_COLOR};
    padding-left: 12px;
    padding-right: 12px;
    padding-top: 3px;
    padding-bottom: 2px;
    margin-right: -1px;
}

/* The widget border of the tab widget */
QTabWidget::pane {
    border: 1px solid ${BORDER_COLOR};
    top: 0px;
}

/* make sure the last tab is not cut */
QTabBar::tab:last
{
    margin-right: 10; /* the last selected tab has nothing to overlap with on the right */
    border-top-right-radius: 3px;
}

/* make sure the first tab is not cut */
QTabBar::tab:first:!selected
{
    margin-left: 0px; /* the last selected tab has nothing to overlap with on the right */
    border-top-left-radius: 3px;
}

/* Selectec tab */
QTabBar::tab:!selected
{
    color: #b1b1b1;
    border-bottom-style: solid;
    margin-top: 2px;
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:1 #212121, stop:.4 #343434);
}

/* The Selected tab */
QTabBar::tab:selected
{
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    margin-bottom: 0px;
}

/* when hovering a non selected tab */
QTabBar::tab:!selected:hover
{
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    background-color: QLinearGradient(
        x1:0, y1:0,
        x2:0, y2:1,
        stop:1 ${_DARK_1_}${BUTTON_COLOR},
        stop:0.6 ${BUTTON_COLOR},
        stop:0.2 ${BUTTON_COLOR},
        stop:0.1 ${HIGHLIGHT_COLOR}
        stop:0 ${HIGHLIGHT_COLOR}
    );
}

/* regular checkbox button */
QCheckBox
{
    background-color: ${WIDGET_BACKGROUND_COLOR};
    border: none;
    color: ${BUTTON_TEXT_COLOR};
    font-size: ${BUTTON_TEXT_SIZE}px;
    font-family: "${BUTTON_TEXT_FONT}";
    spacing: 10px;
}

QCheckBox::focus
{
    border: none;
}

/* disabled checkbox */
QCheckBox:disabled
{
    color: ${MAIN_DISABLED_TEXT_COLOR};
    background-color: ${WIDGET_BACKGROUND_COLOR};
}


QCheckBox::indicator
{
    width: 15px;
    height: 15px;
    border-radius: 0px;
}

QCheckBox::indicator:unchecked {
    image: url(:/checkbox_unchecked_hover.png);
}
QCheckBox::indicator:unchecked:hover {
    image: url(:/checkbox_unchecked_hover.png);
}
QCheckBox::indicator:unchecked:pressed {
    image: url(:/checkbox_unchecked_pressed.png);
}
QCheckBox::indicator:checked {
    image: url(:/checkbox_checked_hover.png);
}
QCheckBox::indicator:checked:hover {
    image: url(:/checkbox_checked_hover.png);
}
QCheckBox::indicator:checked:pressed {
    image: url(:/checkbox_checked_pressed.png);
}
QCheckBox::indicator:indeterminate:hover {
    image: url(:/checkbox_indeterminate_hover.png);
}
QCheckBox::indicator:indeterminate:pressed {
    image: url(:/checkbox_indeterminate_pressed.png);
}

/* regular radio button */
QRadioButton
{
    background-color: ${WIDGET_BACKGROUND_COLOR};
    border: none;
    color: ${BUTTON_TEXT_COLOR};
    font-size: ${BUTTON_TEXT_SIZE}px;
    font-family: "${BUTTON_TEXT_FONT}";
    spacing: 10px;
}

QRadioButton::focus
{
    border: none;
}

/* disabled radio */
QRadioButton:disabled
{
    color: ${MAIN_DISABLED_TEXT_COLOR};
    background-color: ${WIDGET_BACKGROUND_COLOR};
}

QRadioButton::indicator
{
    width: 8px;
    height: 8px;
    border-radius: 6px;
}

QRadioButton::indicator:checked, QRadioButton::indicator:unchecked{
    color: red;
    background-color: ${ITEM_BACKGROUND_COLOR};
    border: 2px solid ${ITEM_BACKGROUND_COLOR};
    border-radius: 6px;
}

QRadioButton::indicator:checked
{
    background-color: ${BUTTON_TEXT_COLOR}
}

QRadioButton::indicator:hover
{
    background-color: ${BUTTON_TEXT_COLOR};
    border: 2px solid ${HIGHLIGHT_COLOR};
}

